package blockchain

import (
	"strings"
    "github.com/ethereum/go-ethereum/accounts/abi"
    "github.com/ethereum/go-ethereum/accounts/abi/bind"
    "github.com/ethereum/go-ethereum/common"
    "github.com/ethereum/go-ethereum/core/types"
    "github.com/ethereum/go-ethereum/ethclient"
)

// Contract bytecode - you can get this from the Solidity compiler
const documentRegistryBytecode = `
608060405234801561001057600080fd5b50610a0a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630f41a0bf1461005c5780636b70b1fa1461007a5780638da5cb5b1461009a578063a2ea7c6e146100b8578063d493b9ac146100d6575b600080fd5b61006461012f565b60405161007191906104ae565b60405180910390f35b61008361019f565b60405161009192919061055d565b60405180910390f35b6100a261021c565b6040516100af91906104ae565b60405180910390f35b6100c0610242565b6040516100cd91906105eb565b60405180910390f35b6100de6102c8565b6040516100f6919091825260ff602082015260400190565b60405180910390f35b6000805461013c90610630565b80601f016020809104026020016040519081016040528092919081815260200182805461016890610630565b80156101b55780601f1061018a576101008083540402835291602001916101b5565b820191906000526020600020905b81548152906001019060200180831161019857829003601f168201915b505050505081565b60018054829081106101b1576101b1610687565b5050600281546101cc90610630565b80601f01602080910402602001604051908101604052809291908181526020018280546101f890610630565b80156102455780601f1061021a57610100808354040283529160200191610245565b820191906000526020600020905b81548152906001019060200180831161022857829003601f168201915b505050505090806002015490508091909156505b60025481565b6002805461024f90610630565b80601f016020809104026020016040519081016040528092919081815260200182805461027b90610630565b80156102c85780601f1061029d576101008083540402835291602001916102c8565b820191906000526020600020905b8154815290600101906020018083116102ab57829003601f168201915b505050505081565b600380546102d590610630565b80601f016020809104026020016040519081016040528092919081815260200182805461030190610630565b801561034e5780601f106103235761010080835404028352916020019161034e565b820191906000526020600020905b81548152906001019060200180831161033157829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16905083565b600081519050919050565b600082825260208201905092915050565b60005b8381101561036f578082015181840152602081019050610354565b60008484015250505050565b6000601f19601f8301169050919050565b60006103978261033b565b6103a18185610346565b93506103b1818560208601610357565b6103ba8161037b565b8402602001919050565b60006103d0826103e0565b905092915050565b60006104088235610a38565b92915050565b600061041982356104e0565b92915050565b60006104238235610a41565b92915050565b600061044482856103c5565b91506104508284610405565b91506104558261095d565b80915050929150565b600060c082019050610475600083018961048d565b610482602083018861048d565b61048e6040830187610a05565b61049a6060830186610423565b6104a66080830185610411565b6104b260a083018461048d565b979650505050505050565b60006040518084526020830160008684360280828437600083820290910192508482525060209350909250905060006104ea82611000565b9250610502816000866110008585d093505b50505092915050565b60006020828403121561052457610523610a17565b5b60006105328482850161051d565b91505092915050565b610544816109c8565b82525050565b6000610555826109a2565b9050919050565b600060408201905061056160008301610544565b81810360208301526105738184610a1c565b90509291505050565b61058581610a0c565b82525050565b600061059682610971565b6105a0818561097c565b93506105b0818560208601610988565b6105b9816109aa565b84019150505092915050565b60006105d1826109b3565b6105db81856109be565b93506105eb818560208601610988565b5b505092915050565b6000602082019050818103600083015261060581846105c6565b90509291505050565b60006106198261062a565b9050919050565b600061063b82610660565b9050919050565b600061064d82610660565b9050919050565b600061066582610687565b9050919050565b60006106778261069d565b9050919050565b60006106898261069d565b9050919050565b600061069b826106d4565b9050919050565b60006106af826106b5565b9050919050565b60006106c7826106cd565b9050919050565b60006106d9826106fb565b9050919050565b60006106e6826106ec565b9050919050565b60006106f8826106fb565b9050919050565b600061070d82610713565b9050919050565b600061071f82610727565b9050919050565b600061073182610737565b9050919050565b600061074382610749565b9050919050565b60006107558261075b565b9050919050565b600061076782610783565b9050919050565b60006107798261077f565b9050919050565b60006107918261079c565b9050919050565b60006107a3826107c9565b9050919050565b15156107b457610abe565b60006107c0826107dd565b9050919050565b60006107d5826107f9565b9050919050565b60006107e982610815565b9050919050565b15156107fa57610abe565b6000610806826107dd565b9050919050565b600061081882610800565b9050919050565b600061082a82610830565b9050919050565b600061083c82610842565b9050919050565b600061084e82610854565b9050919050565b600061086082610866565b9050919050565b600061087282610880565b9050919050565b151561088357610abe565b60006108898261089f565b9050919050565b15156108a057610abe565b60006108ac826108c2565b9050919050565b15156108bd57610abe565b60006108c982611000565b9050919050565b60006108ce826108de565b9050919050565b60006108e0826108e6565b9050919050565b60006108f282610902565b9050919050565b151561090357610abe565b600061090f82610915565b9050919050565b600061092182610927565b9050919050565b600061093382610939565b9050919050565b600061094582610951565b9050919050565b151561095657610abe565b600061095d82610957565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109a557808201518184015260208101905061098a565b838111156109b4576000848401525b50505050565b600081519050919050565b600082825260208201905092915050565b60006109d3826109da565b9050919050565b60006109e5826109ec565b9050919050565b60006109f7826109fd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600080fd5b600080830160006101000a81548163ffffffff02191690837c010000000000000000000000000000000000000000000000000000000090040217905550600060409190910160005260206000f35b60ff8116610a4a57610abe565b5056fea2646970667358221220c5e8e6d54ceb8c736f28f0093ad34000edb16cc29735dbcdbecd446af3c889fe64736f6c63430008120033
`

// Contract ABI - also from the Solidity compiler
const documentRegistryABI = `
[
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "documentHash",
        "type": "string"
      }
    ],
    "name": "documentExists",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "documentHash",
        "type": "string"
      }
    ],
    "name": "getDocumentDetails",
    "outputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "internalType": "string",
        "name": "ipfsCID",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "exists",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "documentHash",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "ipfsCID",
        "type": "string"
      }
    ],
    "name": "registerDocument",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "documentHash",
        "type": "string"
      },
      {
        "internalType": "bool",
        "name": "verified",
        "type": "bool"
      }
    ],
    "name": "recordVerification",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "documentHash",
        "type": "string"
      },
      {
        "internalType": "address",
        "name": "claimedOwner",
        "type": "address"
      }
    ],
    "name": "verifyDocumentOwnership",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
`

// DeployDocumentRegistryContract deploys the DocumentRegistry contract
func DeployDocumentRegistryContract(auth *bind.TransactOpts, client *ethclient.Client) (common.Address, *types.Transaction, error) {
    parsedABI, err := abi.JSON(strings.NewReader(documentRegistryABI))
    if err != nil {
        return common.Address{}, nil, err
    }
    
    // Deploy contract
    address, tx, _, err := bind.DeployContract(auth, parsedABI, common.FromHex(documentRegistryBytecode), client)
    if err != nil {
        return common.Address{}, nil, err
    }
    
    return address, tx, nil
}